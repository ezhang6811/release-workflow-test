name: Test Pre-Release - CHANGELOG Update

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        default: '1.1.0'
      is_patch:
        description: 'Is this a patch? (true or false)'
        required: true
        default: 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  test-pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup variables
        run: |
          VERSION="${{ github.event.inputs.version }}"
          MAJOR_MINOR=$(echo $VERSION | sed -E 's/([0-9]+\.[0-9]+)\.[0-9]+/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_ENV
          
      - name: Create release branch
        run: |
          # Check if release branch exists
          if git ls-remote --heads origin release/v${MAJOR_MINOR}.x | grep -q release/v${MAJOR_MINOR}.x; then
            echo "Release branch release/v${MAJOR_MINOR}.x already exists"
            git fetch origin release/v${MAJOR_MINOR}.x
            git checkout release/v${MAJOR_MINOR}.x
          else
            echo "Creating new release branch release/v${MAJOR_MINOR}.x"
            git checkout -b release/v${MAJOR_MINOR}.x
            git push origin release/v${MAJOR_MINOR}.x
          fi
          
          # Create version-specific branch
          git checkout -b "v${VERSION}_release"
          git push origin "v${VERSION}_release"
          
      - name: Update CHANGELOG for release
        run: |
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          echo "=== BEFORE CHANGELOG UPDATE ==="
          cat CHANGELOG.md
          
          # Replace "## Unreleased" with "## Unreleased\n\n## ${VERSION} - $(date +%Y-%m-%d)"
          sed -i "s/## Unreleased/## Unreleased\n\n## ${VERSION} - $(date +%Y-%m-%d)/" CHANGELOG.md
          
          echo "=== AFTER CHANGELOG UPDATE ==="
          cat CHANGELOG.md
          
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for version ${VERSION}"
          git push origin "v${VERSION}_release"
          
      - name: Create PR against release branch
        run: |
          gh pr create --title "Test Pre-release: Update version to ${VERSION}" \
                       --body "This PR updates the version to ${VERSION}.
          
          This is a test of the pre-release workflow." \
                       --head v${{ github.event.inputs.version }}_release \
                       --base release/v${MAJOR_MINOR}.x
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Show final state
        run: |
          echo "=== FINAL CHANGELOG STATE ==="
          cat CHANGELOG.md
          echo "=== CURRENT BRANCH ==="
          git branch --show-current
